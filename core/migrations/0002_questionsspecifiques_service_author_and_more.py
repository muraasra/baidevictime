# Generated by Django 5.1 on 2025-04-29 10:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuestionsSpecifiques',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.CharField(max_length=255)),
                ('medicaments_disponibles', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='service',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='QuestionTransversale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_structure', models.CharField(max_length=255)),
                ('fonction_repondant', models.CharField(default='None', max_length=255)),
                ('nom_repondant', models.CharField(max_length=255)),
                ('telephone_repondant', models.CharField(max_length=20)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('site_web', models.URLField(blank=True, null=True)),
                ('langues_parlees', models.JSONField(default=list)),
                ('jours_ouverture', models.JSONField(default=list)),
                ('heures_ouverture', models.TimeField(blank=True, null=True)),
                ('gratuit', models.JSONField(default=list)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question_specifique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.questionsspecifiques')),
            ],
            options={
                'verbose_name': 'Question Transversale',
                'verbose_name_plural': 'Questions Transversales',
            },
        ),
        migrations.CreateModel(
            name='PoliceSecurity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicaments_disponibles', models.JSONField(default=dict, verbose_name='Médicaments disponibles')),
                ('reception_plainte', models.BooleanField(default=False, verbose_name='Réception et traitement des plaintes')),
                ('enquete_arrestation', models.BooleanField(default=False, verbose_name='Enquête sur et arrestation des bourreaux')),
                ('autres_appuis', models.TextField(blank=True, verbose_name="Autres types d'appui")),
                ('salle_confidentielle', models.BooleanField(default=False, verbose_name="Salle/pratique d'écoute confidentielle des cas de VBG")),
                ('classement_securise', models.BooleanField(default=False, verbose_name='Espace de classement sécurisé et verrouillé')),
                ('ordinateur_protege', models.BooleanField(default=False, verbose_name='Ordinateur protégé par mot de passe')),
                ('fournitures_admin', models.BooleanField(default=False, verbose_name='Fournitures administratives disponibles')),
                ('autres_infrastructures', models.TextField(blank=True, verbose_name='Autres infrastructures ou équipements')),
                ('effectif_hommes', models.IntegerField(default=0, verbose_name="Nombre total d'agents hommes")),
                ('effectif_femmes', models.IntegerField(default=0, verbose_name="Nombre total d'agents femmes")),
                ('opj_hommes', models.IntegerField(default=0, verbose_name="Nombre d'OPJ hommes")),
                ('opj_femmes', models.IntegerField(default=0, verbose_name="Nombre d'OPJ femmes")),
                ('form_enfants_hommes', models.IntegerField(default=0, verbose_name='Personnel formé sur les violences envers les enfants hommes')),
                ('form_enfants_femmes', models.IntegerField(default=0, verbose_name='Personnel formé sur les violences envers les enfants femmes')),
                ('form_vbg_hommes', models.IntegerField(default=0, verbose_name='Personnel formé sur les VBG / EAS hommes')),
                ('form_vbg_femmes', models.IntegerField(default=0, verbose_name='Personnel formé sur les VBG / EAS femmes')),
                ('service_gratuit', models.BooleanField(default=True, verbose_name='Service gratuit')),
                ('items_payants', models.TextField(blank=True, verbose_name='Items payants pour les bénéficiaires')),
                ('difficultes_service', models.TextField(blank=True, verbose_name='Difficultés rencontrées dans ce service')),
                ('question_transversale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='police_securite', to='core.questiontransversale')),
            ],
            options={
                'verbose_name': 'Service Police / Sécurité',
                'verbose_name_plural': 'Services Police / Sécurité',
            },
        ),
        migrations.CreateModel(
            name='AssistanceJuridique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conseils_juridiques', models.BooleanField(default=False, verbose_name='Conseils juridiques disponibles')),
                ('assistance_juridique', models.BooleanField(default=False, verbose_name='Assistance pour les services juridiques')),
                ('representation_legale', models.BooleanField(default=False, verbose_name='Représentation légale disponible')),
                ('referencement_legale', models.TextField(blank=True, verbose_name='Référencement pour la représentation légale')),
                ('autres_appuis', models.TextField(blank=True, verbose_name="Autres types d'appui")),
                ('formulaire_consentement', models.BooleanField(default=False, verbose_name="Utilisation d'un formulaire de consentement")),
                ('espace_confidentiel', models.BooleanField(default=False, verbose_name="Espace sûr et confidentiel pour l'écoute")),
                ('classement_securise', models.BooleanField(default=False, verbose_name='Espace de classement sécurisé / Ordinateur protégé')),
                ('fournitures_admin', models.BooleanField(default=False, verbose_name='Présence de fournitures administratives')),
                ('mecanisme_eas', models.BooleanField(default=False, verbose_name="Mécanisme de réponse aux cas d'EAS / harcèlement sexuel")),
                ('protocole_juridique', models.BooleanField(default=False, verbose_name='Protocole de prise en charge des besoins juridiques')),
                ('juristes_hommes', models.IntegerField(default=0, verbose_name='Nombre de juristes / avocats hommes')),
                ('juristes_femmes', models.IntegerField(default=0, verbose_name='Nombre de juristes / avocats femmes')),
                ('para_juristes_hommes', models.IntegerField(default=0, verbose_name='Nombre de conseillers juridiques / para-juristes hommes')),
                ('para_juristes_femmes', models.IntegerField(default=0, verbose_name='Nombre de conseillers juridiques / para-juristes femmes')),
                ('form_enfants_hommes', models.IntegerField(default=0, verbose_name='Personnes formées sur les violences envers les enfants hommes')),
                ('form_enfants_femmes', models.IntegerField(default=0, verbose_name='Personnes formées sur les violences envers les enfants femmes')),
                ('form_vbg_hommes', models.IntegerField(default=0, verbose_name='Personnes formées sur la prévention des EAS / VBG hommes')),
                ('form_vbg_femmes', models.IntegerField(default=0, verbose_name='Personnes formées sur la prévention des EAS / VBG femmes')),
                ('collab_police', models.BooleanField(default=False, verbose_name='Collaboration avec les unités de police/gendarmerie')),
                ('nb_policiers_collab', models.IntegerField(default=0, verbose_name="Nombre d'agents de police/gendarmerie collaborateurs")),
                ('collab_tribunaux', models.BooleanField(default=False, verbose_name='Collaboration avec les juridictions')),
                ('service_gratuit', models.BooleanField(default=True, verbose_name='Service gratuit')),
                ('items_payants', models.TextField(blank=True, verbose_name='Items payants par le bénéficiaire')),
                ('difficultes_service', models.TextField(blank=True, verbose_name='Difficultés rencontrées dans ce service')),
                ('question_transversale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assistance_juridique', to='core.questiontransversale')),
            ],
            options={
                'verbose_name': 'Service Assistance Juridique',
                'verbose_name_plural': 'Services Assistance Juridique',
            },
        ),
        migrations.CreateModel(
            name='AppuiPsychosocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soutien_psy_base', models.BooleanField(default=False, verbose_name='Soutien émotionnel de base / premiers secours psychologique')),
                ('appui_individuel', models.BooleanField(default=False, verbose_name='Appui psychosocial individuel')),
                ('appui_groupe', models.BooleanField(default=False, verbose_name='Appui psychosocial de groupe')),
                ('gestion_enfants', models.BooleanField(default=False, verbose_name='Gestion des cas de violences pour les survivants enfants')),
                ('gestion_adultes', models.BooleanField(default=False, verbose_name='Gestion des cas de VBG/EAS pour les survivants adultes')),
                ('kits_dignite', models.BooleanField(default=False, verbose_name='Kits de dignité disponibles')),
                ('aide_financiere', models.BooleanField(default=False, verbose_name='Assistance financière ponctuelle pour besoins immédiats')),
                ('autres_appuis', models.TextField(blank=True, verbose_name='Autres appuis pour la gestion de cas')),
                ('service_gratuit', models.BooleanField(default=True, verbose_name='Service gratuit')),
                ('cout_service', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Coût estimatif du service (FCFA)')),
                ('gest_enfant_hommes', models.IntegerField(default=0, verbose_name='Gestionnaires des cas de violences envers enfants hommes')),
                ('gest_enfant_femmes', models.IntegerField(default=0, verbose_name='Gestionnaires des cas de violences envers enfants femmes')),
                ('gest_vbg_hommes', models.IntegerField(default=0, verbose_name='Gestionnaires des cas de VBG/EAS hommes')),
                ('gest_vbg_femmes', models.IntegerField(default=0, verbose_name='Gestionnaires des cas de VBG/EAS femmes')),
                ('superviseurs_hommes', models.IntegerField(default=0, verbose_name='Superviseurs de gestion des cas de VBG hommes')),
                ('superviseurs_femmes', models.IntegerField(default=0, verbose_name='Superviseurs de gestion des cas de VBG femmes')),
                ('aps_hommes', models.IntegerField(default=0, verbose_name='Agents psychosociaux hommes')),
                ('aps_femmes', models.IntegerField(default=0, verbose_name='Agents psychosociaux femmes')),
                ('autres_pers_hommes', models.IntegerField(default=0, verbose_name='Autres personnes travaillant dans le service hommes')),
                ('autres_pers_femmes', models.IntegerField(default=0, verbose_name='Autres personnes travaillant dans le service femmes')),
                ('form_gest_enfant_hommes', models.IntegerField(default=0, verbose_name='Agents formés en gestion des cas de violences envers enfants hommes')),
                ('form_gest_enfant_femmes', models.IntegerField(default=0, verbose_name='Agents formés en gestion des cas de violences envers enfants femmes')),
                ('form_gest_vbg_hommes', models.IntegerField(default=0, verbose_name='Agents formés en gestion des cas de VBG/EAS hommes')),
                ('form_gest_vbg_femmes', models.IntegerField(default=0, verbose_name='Agents formés en gestion des cas de VBG/EAS femmes')),
                ('form_eas_hommes', models.IntegerField(default=0, verbose_name='Agents formés à la prévention des EAS hommes')),
                ('form_eas_femmes', models.IntegerField(default=0, verbose_name='Agents formés à la prévention des EAS femmes')),
                ('form_psychosocial_hommes', models.IntegerField(default=0, verbose_name="Agents formés à l'accompagnement psychosocial des survivantes de VBG hommes")),
                ('form_psychosocial_femmes', models.IntegerField(default=0, verbose_name="Agents formés à l'accompagnement psychosocial des survivantes de VBG femmes")),
                ('salle_ecoute', models.BooleanField(default=False, verbose_name="Salle d'écoute confidentielle et confortable disponible")),
                ('espace_enfants', models.BooleanField(default=False, verbose_name='Espace sûr adapté pour les enfants disponible')),
                ('outils_gestion_cas', models.BooleanField(default=False, verbose_name='Outils de gestion de cas existants')),
                ('securite_dossiers', models.BooleanField(default=False, verbose_name='Équipements pour la sécurité des dossiers')),
                ('bien_etre_staff', models.BooleanField(default=False, verbose_name='Activités de bien-être pour le staff de gestion de cas')),
                ('protocole_gestion', models.BooleanField(default=False, verbose_name='Protocole de prise en charge psychosociale et de gestion de cas disponible')),
                ('referencement', models.BooleanField(default=False, verbose_name="Circuit de référencement vers d'autres services")),
                ('mecanisme_eas', models.BooleanField(default=False, verbose_name="Mécanisme de réponse aux cas d'EAS / harcèlement sexuel")),
                ('autres_infrastructures', models.TextField(blank=True, verbose_name='Autres infrastructures pour la gestion des cas de VBG')),
                ('difficultes_service', models.TextField(blank=True, verbose_name='Difficultés rencontrées dans ce service')),
                ('question_transversale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='appui_psychosocial', to='core.questiontransversale')),
            ],
            options={
                'verbose_name': 'Service Appui Psychosocial',
                'verbose_name_plural': 'Services Appui Psychosocial',
            },
        ),
        migrations.CreateModel(
            name='ReinsertionEconomique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('formation_metier', models.BooleanField(default=False, verbose_name='Offre de formation professionnelle sur des métiers')),
                ('aide_especes', models.BooleanField(default=False, verbose_name='Aide en espèces pour appuyer une activité génératrice de revenu')),
                ('avec', models.BooleanField(default=False, verbose_name="Association Villageoise d'Épargne et de Crédit (AVEC) mise en place")),
                ('referencement_travail', models.BooleanField(default=False, verbose_name='Référencement / placement vers des opportunités de travail ou formation')),
                ('alphabetisation', models.BooleanField(default=False, verbose_name='Formation en alphabétisation disponible')),
                ('autres_appuis', models.TextField(blank=True, verbose_name="Autres types d'appui")),
                ('agents_formation_hommes', models.IntegerField(default=0, verbose_name='Agents des services de formation professionnelle hommes')),
                ('agents_formation_femmes', models.IntegerField(default=0, verbose_name='Agents des services de formation professionnelle femmes')),
                ('aps_hommes', models.IntegerField(default=0, verbose_name='Agents psychosociaux hommes')),
                ('aps_femmes', models.IntegerField(default=0, verbose_name='Agents psychosociaux femmes')),
                ('agents_services_financiers_hommes', models.IntegerField(default=0, verbose_name='Agents des services financiers hommes')),
                ('agents_services_financiers_femmes', models.IntegerField(default=0, verbose_name='Agents des services financiers femmes')),
                ('volontaires_hommes', models.IntegerField(default=0, verbose_name='Volontaires communautaires hommes')),
                ('volontaires_femmes', models.IntegerField(default=0, verbose_name='Volontaires communautaires femmes')),
                ('agents_autonomisation_hommes', models.IntegerField(default=0, verbose_name='Agents en autonomisation économique/sociale & entrepreneuriat hommes')),
                ('agents_autonomisation_femmes', models.IntegerField(default=0, verbose_name='Agents en autonomisation économique/sociale & entrepreneuriat femmes')),
                ('agronomes_hommes', models.IntegerField(default=0, verbose_name='Agronomes / Vétérinaires hommes')),
                ('agronomes_femmes', models.IntegerField(default=0, verbose_name='Agronomes / Vétérinaires femmes')),
                ('formes_enfants_hommes', models.IntegerField(default=0, verbose_name='Personnes formées sur les violences envers les enfants hommes')),
                ('formes_enfants_femmes', models.IntegerField(default=0, verbose_name='Personnes formées sur les violences envers les enfants femmes')),
                ('formes_vbg_hommes', models.IntegerField(default=0, verbose_name='Personnes formées sur les VBG / EAS hommes')),
                ('formes_vbg_femmes', models.IntegerField(default=0, verbose_name='Personnes formées sur les VBG / EAS femmes')),
                ('formes_formation_hommes', models.IntegerField(default=0, verbose_name='Personnes formées comme agents des services de formation professionnelle hommes')),
                ('formes_formation_femmes', models.IntegerField(default=0, verbose_name='Personnes formées comme agents des services de formation professionnelle femmes')),
                ('formes_entreprenariat_hommes', models.IntegerField(default=0, verbose_name="Personnes formées sur l'entrepreneuriat hommes")),
                ('formes_entreprenariat_femmes', models.IntegerField(default=0, verbose_name="Personnes formées sur l'entrepreneuriat femmes")),
                ('formes_compta_hommes', models.IntegerField(default=0, verbose_name='Personnes formées en comptabilité de base hommes')),
                ('formes_compta_femmes', models.IntegerField(default=0, verbose_name='Personnes formées en comptabilité de base femmes')),
                ('mecanisme_eas', models.BooleanField(default=False, verbose_name="Existe-t-il un mécanisme de réponse aux cas d'EAS / harcèlement sexuel")),
                ('service_gratuit', models.BooleanField(default=True, verbose_name='Le service est-il gratuit')),
                ('items_payants', models.TextField(blank=True, verbose_name='Éléments payants pour les bénéficiaires')),
                ('difficultes_service', models.TextField(blank=True, verbose_name='Quelles sont les principales difficultés rencontrées dans ce service')),
                ('question_transversale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reinsertion_economique', to='core.questiontransversale')),
            ],
            options={
                'verbose_name': 'Service Réinsertion économique',
                'verbose_name_plural': 'Services Réinsertion économique',
            },
        ),
        migrations.CreateModel(
            name='SanteMentale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appui_pharma', models.BooleanField(default=False, verbose_name='Accompagnement pharmacologique (Disponibilité de médicaments psychotropes)')),
                ('appui_psy', models.BooleanField(default=False, verbose_name='Accompagnement psychologique (PM+, Gestion du stress, psychothérapie de soutien)')),
                ('appui_social', models.BooleanField(default=False, verbose_name='Accompagnement social (aide à la restauration de la dignité de la personne)')),
                ('autres_appuis', models.TextField(blank=True, verbose_name="Autres types d'appui")),
                ('nb_hommes', models.IntegerField(default=0, verbose_name='Nombre total de personnel hommes')),
                ('nb_femmes', models.IntegerField(default=0, verbose_name='Nombre total de personnel femmes')),
                ('psychiatres_hommes', models.IntegerField(default=0, verbose_name='Psychiatres hommes')),
                ('psychiatres_femmes', models.IntegerField(default=0, verbose_name='Psychiatres femmes')),
                ('psychologues_hommes', models.IntegerField(default=0, verbose_name='Psychologues cliniciens hommes')),
                ('psychologues_femmes', models.IntegerField(default=0, verbose_name='Psychologues cliniciens femmes')),
                ('infirmiers_psy_hommes', models.IntegerField(default=0, verbose_name='Infirmiers en santé mentale hommes')),
                ('infirmiers_psy_femmes', models.IntegerField(default=0, verbose_name='Infirmiers en santé mentale femmes')),
                ('sociologues_hommes', models.IntegerField(default=0, verbose_name='Sociologues hommes')),
                ('sociologues_femmes', models.IntegerField(default=0, verbose_name='Sociologues femmes')),
                ('anthropologues_hommes', models.IntegerField(default=0, verbose_name='Anthropologues hommes')),
                ('anthropologues_femmes', models.IntegerField(default=0, verbose_name='Anthropologues femmes')),
                ('medecins_psy_hommes', models.IntegerField(default=0, verbose_name='Médecins formés en santé mentale hommes')),
                ('medecins_psy_femmes', models.IntegerField(default=0, verbose_name='Médecins formés en santé mentale femmes')),
                ('aps_hommes', models.IntegerField(default=0, verbose_name='Agents psychosociaux hommes')),
                ('aps_femmes', models.IntegerField(default=0, verbose_name='Agents psychosociaux femmes')),
                ('autres_personnel_hommes', models.IntegerField(default=0, verbose_name='Autres personnels offrant des soins en santé mentale hommes')),
                ('autres_personnel_femmes', models.IntegerField(default=0, verbose_name='Autres personnels offrant des soins en santé mentale femmes')),
                ('salle_ecoute_confidentielle', models.BooleanField(default=False, verbose_name="Salle d'écoute et de gestion de cas confidentielle disponible")),
                ('espace_enfants', models.BooleanField(default=False, verbose_name="Présence d'espaces sûrs adaptés pour les enfants")),
                ('securite_dossiers', models.BooleanField(default=False, verbose_name='Équipements pour la sécurité des dossiers (codes, armoires, clés, etc.)')),
                ('protocole_prise_en_charge', models.BooleanField(default=False, verbose_name='Protocole de prise en charge des besoins en santé mentale disponible')),
                ('autres_equipements', models.TextField(blank=True, verbose_name='Autres équipements ou infrastructures')),
                ('form_enfants_hommes', models.IntegerField(default=0, verbose_name='Personnel formé sur les violences envers les enfants hommes')),
                ('form_enfants_femmes', models.IntegerField(default=0, verbose_name='Personnel formé sur les violences envers les enfants femmes')),
                ('form_vbg_hommes', models.IntegerField(default=0, verbose_name='Personnel formé sur les VBG / EAS hommes')),
                ('form_vbg_femmes', models.IntegerField(default=0, verbose_name='Personnel formé sur les VBG / EAS femmes')),
                ('form_mhgap_hommes', models.IntegerField(default=0, verbose_name='Personnel médical formé sur le programme MhGAP hommes')),
                ('form_mhgap_femmes', models.IntegerField(default=0, verbose_name='Personnel médical formé sur le programme MhGAP femmes')),
                ('form_psp_hommes', models.IntegerField(default=0, verbose_name='Personnel formé au premier secours psychologique hommes')),
                ('form_psp_femmes', models.IntegerField(default=0, verbose_name='Personnel formé au premier secours psychologique femmes')),
                ('form_gestion_cas_hommes', models.IntegerField(default=0, verbose_name='Personnel formé à la gestion de cas hommes')),
                ('form_gestion_cas_femmes', models.IntegerField(default=0, verbose_name='Personnel formé à la gestion de cas femmes')),
                ('form_eas_hommes', models.IntegerField(default=0, verbose_name='Personnel formé à la prévention des EAS / harcèlement sexuel hommes')),
                ('form_eas_femmes', models.IntegerField(default=0, verbose_name='Personnel formé à la prévention des EAS / harcèlement sexuel femmes')),
                ('difficultes_service', models.TextField(blank=True, verbose_name='Quelles sont les difficultés rencontrées dans ce service')),
                ('question_transversale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sante_mentale', to='core.questiontransversale')),
            ],
            options={
                'verbose_name': 'Service Santé mentale',
                'verbose_name_plural': 'Services Santé mentale',
            },
        ),
        migrations.CreateModel(
            name='SoinsMedicaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocole_viol', models.BooleanField(default=False, verbose_name='Protocole de prise en charge médicale des cas de viol')),
                ('infirmiers_hommes', models.IntegerField(default=0, verbose_name="Nombre d'infirmiers hommes")),
                ('infirmiers_femmes', models.IntegerField(default=0, verbose_name="Nombre d'infirmiers femmes")),
                ('matrones_hommes', models.IntegerField(default=0, verbose_name='Nombre de matrones hommes')),
                ('matrones_femmes', models.IntegerField(default=0, verbose_name='Nombre de matrones femmes')),
                ('sagefemmes_hommes', models.IntegerField(default=0, verbose_name='Nombre de sages-femmes hommes')),
                ('sagefemmes_femmes', models.IntegerField(default=0, verbose_name='Nombre de sages-femmes femmes')),
                ('medecins_hommes', models.IntegerField(default=0, verbose_name='Nombre de médecins hommes')),
                ('medecins_femmes', models.IntegerField(default=0, verbose_name='Nombre de médecins femmes')),
                ('gyn_hommes', models.IntegerField(default=0, verbose_name='Nombre de gynécologues hommes')),
                ('gyn_femmes', models.IntegerField(default=0, verbose_name='Nombre de gynécologues femmes')),
                ('autres_agents', models.TextField(blank=True, verbose_name='Autres agents de santé')),
                ('salle_privee', models.BooleanField(default=False, verbose_name='Salle privée avec rideau et accès toilette')),
                ('table_examen', models.BooleanField(default=False, verbose_name="Table d'examen disponible")),
                ('eclairage_fixe', models.BooleanField(default=False, verbose_name='Éclairage fixe disponible')),
                ('autoclave', models.BooleanField(default=False, verbose_name='Autoclave disponible')),
                ('aucun_meuble', models.BooleanField(default=False, verbose_name='Aucun meuble disponible')),
                ('kit_ist', models.BooleanField(default=False, verbose_name='Kit IST disponible')),
                ('pep_vih', models.BooleanField(default=False, verbose_name='PEP VIH disponible')),
                ('contraceptifs_urgence', models.BooleanField(default=False, verbose_name="Contraceptifs d'urgence disponibles")),
                ('anatoxine', models.BooleanField(default=False, verbose_name='Anatoxine tétanique / Immunoglobuline disponible')),
                ('vaccin_hepatiteb', models.BooleanField(default=False, verbose_name='Vaccin hépatite B disponible')),
                ('antalgiques', models.BooleanField(default=False, verbose_name='Antalgiques disponibles')),
                ('anesthesiques', models.BooleanField(default=False, verbose_name='Anesthésiques locaux disponibles')),
                ('antibiotiques', models.BooleanField(default=False, verbose_name='Antibiotiques / Antiseptiques disponibles')),
                ('speculums', models.BooleanField(default=False, verbose_name='Spéculums disponibles')),
                ('rubans', models.BooleanField(default=False, verbose_name='Rubans à mesurer disponibles')),
                ('seringues', models.BooleanField(default=False, verbose_name='Seringues / Aiguilles papillon disponibles')),
                ('kit_suture', models.BooleanField(default=False, verbose_name='Kit de suture disponible')),
                ('couvertures', models.BooleanField(default=False, verbose_name='Couvertures / Draps disponibles')),
                ('fournitures_sanitaires', models.BooleanField(default=False, verbose_name='Fournitures sanitaires disponibles')),
                ('fournitures_protection', models.BooleanField(default=False, verbose_name='Fournitures de protection disponibles')),
                ('fiche_examen', models.BooleanField(default=False, verbose_name="Fiche d'examen avec pictogrammes disponible")),
                ('fiche_suivi', models.BooleanField(default=False, verbose_name='Fiche de suivi médical disponible')),
                ('fiche_consentement', models.BooleanField(default=False, verbose_name='Fiche de consentement disponible')),
                ('fiche_referencement', models.BooleanField(default=False, verbose_name='Fiche de référencement disponible')),
                ('classement_securise', models.BooleanField(default=False, verbose_name='Espace de classement sécurisé / Ordinateur protégé')),
                ('planning_familial', models.BooleanField(default=False, verbose_name='Planification familiale disponible')),
                ('soins_prenataux', models.BooleanField(default=False, verbose_name='Soins prénataux disponibles')),
                ('accouchement', models.BooleanField(default=False, verbose_name='Accouchement avec partogramme disponible')),
                ('soins_postpartum', models.BooleanField(default=False, verbose_name='Soins post-partum disponibles')),
                ('suivi_croissance', models.BooleanField(default=False, verbose_name='Suivi croissance nourrissons disponible')),
                ('vaccination', models.BooleanField(default=False, verbose_name='Vaccination disponible')),
                ('pcime', models.BooleanField(default=False, verbose_name='PCIME disponible')),
                ('depistage_cancer', models.BooleanField(default=False, verbose_name='Dépistage cancer col utérus disponible')),
                ('sante_adolescents', models.BooleanField(default=False, verbose_name='Santé des adolescents disponible')),
                ('autres_services_srmne', models.TextField(blank=True, verbose_name='Autres services SRMNE')),
                ('salle_lits_travail', models.BooleanField(default=False, verbose_name='Salle et lits de travail disponibles')),
                ('salle_accouchement', models.BooleanField(default=False, verbose_name="Salle d'accouchement disponible")),
                ('salle_lits_postpartum', models.BooleanField(default=False, verbose_name='Salle et lits de post-partum disponibles')),
                ('equipement_accouchement', models.BooleanField(default=False, verbose_name='Équipement minimum pour accouchements disponible')),
                ('laboratoire', models.BooleanField(default=False, verbose_name='Laboratoire avec examens standards disponible')),
                ('bloc_operatoire', models.BooleanField(default=False, verbose_name='Bloc opératoire fonctionnel')),
                ('autres_equipements', models.TextField(blank=True, verbose_name='Autres équipements')),
                ('formation_viol', models.BooleanField(default=False, verbose_name='Formation sur la gestion clinique du viol')),
                ('formation_conjugale', models.BooleanField(default=False, verbose_name='Formation sur la prise en charge des violences conjugales')),
                ('formation_enfants', models.BooleanField(default=False, verbose_name='Formation sur la prise en charge des enfants survivants')),
                ('principes_directeurs', models.BooleanField(default=False, verbose_name='Formation sur les principes directeurs')),
                ('cadre_normatif', models.BooleanField(default=False, verbose_name='Formation sur le cadre normatif')),
                ('formation_eas', models.BooleanField(default=False, verbose_name='Formation sur la prévention EAS/HS')),
                ('autres_formations', models.TextField(blank=True, verbose_name='Autres formations')),
                ('kit_preuve_medico', models.BooleanField(default=False, verbose_name='Kit de collecte des preuves médico-légales')),
                ('difficultes_service', models.TextField(blank=True, verbose_name='Difficultés rencontrées')),
                ('question_transversale', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='soins_medicaux', to='core.questiontransversale')),
            ],
            options={
                'verbose_name': 'Service Soins Médicaux',
                'verbose_name_plural': 'Services Soins Médicaux',
            },
        ),
    ]
